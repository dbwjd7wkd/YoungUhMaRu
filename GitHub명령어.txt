-GitHub 명령어-

mkdir 디렉토리 : 새로운 디렉토리 만들기
cd 디렉토리 : 디렉토리로 이동
git init : Git 로컬저장소를 새로 만드는 명령

git add hello.html : 인덱스에 추가 (인덱스 = 저장소에 커밋할 준비를 하기위해 변경 내용을 임시로 저장할 위치)
git commit -m"new file" : 로컬 저장소의 파일 추가 기록
git status : 저장소에 파일이 추가되어 있는지 확인
git remote add origin https://github.com/username/repositotyName : 원격 저장소의 정보 추가
git push origin master : 로컬 저장소의 변경을 원격 저장소에 반영
- github의 사용자 이름과 암호를 입력하면, push할 수 있음.

git branch : 현재 브랜치 목록, *master 는 브랜치가 master 것이고 현재브랜치도 master임을 나타냄(현재 브랜치에는 *가 붙음)
git branch suddir01 : subdir01이라는 브랜치 생성
git checkout subdir01 : 지점의 이동
git checkout -b subdir01 : 브랜치 생성 및 지점 이동
브랜치 푸쉬: git push origin subdir01

git checkout subdir01 : 원격 브랜치 subdir01에 대응
git pull : 원격 브랜치 subdir01의 코드를 가져옴

<브랜치 병합>
git checkout master : 현재 분기를 master로 전환
git merge subdir01 : 브랜치 병합
git push origin master : github에 푸쉬 (병합 완료)

<브랜치 삭제>
git branch -d subdir01 : 브랜치 삭제
git branch : 결과 확인

<자주 사용하는 Git 명령 12>
git status

git add [file_pattern]

git commit -m " "
git commit -am " " : 변경된 파일을 검색하고 인덱스에 추가하는 작업도 동시에 실시

git branch [branch-name]
git branch
git branch -d [branch-name]

git checkout [branch-name]

git log -n 10 : 로컬 저장소의 커밋 히스토리를 탐색, -n옵션 내역보기 수를 지정할 수 있음

git grep "검색 단어" : 저장소의 파일 내용에서 검색할 때 사용, 특정 단어가 포함된 파일을 검색

git clone [url] : 기존 원격 저장소를 로컬에 다운로드

git remote : 원격 저장소의 이름 목록을 표시
git remote -v : 원격 저장소에 대한 자세한 목록보기
git remote add [name] [url] : 원격 저장소를 추가
git remote rm [name] : 원격 저장소를 제거

git reset -soft HEAD ^ : 로컬 저장소의 커밋을 취소 (잘못 커밋하거나 수정 누락이 있을 때)

git checkout master git merge bug-fix : 분기 bug-fix를 master 브랜치에 병합

git checkout master git pull origin master : 로컬저자소 master브랜치에 원격 저장소 origin의 master브랜치를 가져옴







<git add . warning 문제>

1.
git add .
warning: LF will be replaced by CRLF in .gitignore.
The file will have its original line endings in your working directory.
---> console 창이나 command 창에
'git config --local core.autocrlf false'
​입력해주면 된다.

2.
git add .
warning: unable to access '~~~' : File name too long
--->console 창이나 command 창에
'git config core.longpaths true'
입력해주면 된다. 